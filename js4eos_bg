var http = require('http');
var url = require('url');
var wallet = require('./lib/wallet2');

function echoJson(res, data) {
    console.log("response", data)
    res.writeHead(200, {'Content-Type': 'text/json'});
    res.write(JSON.stringify({data}));
    res.end();
}

async function processReq(req, res) {
    try {
        await processReqInner(req, res)
    } catch (e) {
        return echoJson(res, {
            error:e
        })
    }
}

async function processReqInner(req, res) {
    let uri=url.parse(req.url);
    let page = url.parse(uri).path?url.parse(uri).path.match('^[^?]*')[0].split('/').slice(1)[0] : '';
    var query = url.parse(req.url,true).query
    var ret = ""
    wallet.resetTime();
    switch(page) {
        case "create":
            ret = await wallet.create("" + query.name, "" + query.passwd);
            return echoJson(res, ret)
        case "import":
            ret = await wallet.importKey(query.name, query.key)
            return echoJson(res, ret)
        case "keys":
            ret = await wallet.getPrivateKeysSync()
            return echoJson(res, ret)
        case "unlock":
            ret = await wallet.unlock(query.name, query.passwd)
            return echoJson(res, ret)
        case "lock":
            ret = await wallet.lock(query.name)
            return echoJson(res, ret)
        case "list":
            ret = await wallet.list()
            return echoJson(res, ret)
        case "delete":
            ret = await wallet.delete(query.name)
            return echoJson(res, ret)
    }
    return echoJson(res, "")
}

process.on('SIGHUP', function() {
  console.log('Got SIGHUP signal');
  process.exit(0)
});

http.createServer(function (req, res) {
    processReq(req, res)
}).listen(5555, "127.0.0.1");